{"version":3,"file":"static/js/76.7c781366.chunk.js","mappings":"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","sources":["webpack://filmweb/./src/components/Cast/Cast.module.css?c9ee","components/Cast/Cast.jsx","webpack://filmweb/./src/components/ErrorComponent/ErrorView.module.css?39a8","components/ErrorComponent/ErrorView..jsx","utils/apiCalls.js","utils/constans.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"cast\":\"Cast_cast__LybwB\",\"item\":\"Cast_item__-bqS6\",\"photo\":\"Cast_photo__B5bJ1\",\"name\":\"Cast_name__7BXUS\",\"character\":\"Cast_character__N8T-k\"};","import React, { useState, useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { getMovieCast } from '../../utils/apiCalls';\r\nimport actorPlaceholder from '../../images/actorPlaceholder.jpg';\r\nimport styles from './Cast.module.css';\r\nimport { STATUS } from \"../../utils/constans\";\r\nimport LoaderComponent from \"../../components/LoaderComponent/LoaderComponent\";\r\nimport ErrorView from \"../../components/ErrorComponent/ErrorView.\";\r\n\r\n\r\nconst Cast = () => {\r\n  // const [cast, setCast] = useState([]);\r\n  const { id } = useParams();\r\n  const [error, setError] = useState(null);\r\n  const [status, setStatus] = useState(STATUS.IDLE);\r\n  const [authors, setAuthors] = useState(null);\r\n\r\n  useEffect(() => {\r\n    setStatus(STATUS.PENDING);\r\n    getMovieCast(id)\r\n    .then(({ cast }) => {\r\n      setAuthors(cast);\r\n      setStatus(STATUS.RESOLVED);\r\n    })\r\n    .catch(error => {\r\n      console.log(error);\r\n      setError(\"Coś poszło nie tak, spróbuj ponownie.\");\r\n      setStatus(STATUS.REJECTED);\r\n    });\r\n  }, [id])\r\n\r\n\r\n  return (\r\n    <>\r\n\r\n      {status === STATUS.PENDING && <LoaderComponent />}\r\n      {status === STATUS.REJECTED && <ErrorView message={error}/>}\r\n      {status === STATUS.RESOLVED && (\r\n        <ul className={styles.cast}>\r\n          {authors.length < 1 ? (\r\n            <p>Przepraszamy, brak opisu</p>\r\n          ) : (\r\n            authors.map(({ character, id, name, profile_path }) => (\r\n              <li key={id} className={styles.item}>\r\n                {profile_path === null ? (\r\n                  <img\r\n                    src={actorPlaceholder}\r\n                    alt=\"Zdjęcie jest niedostępne\"\r\n                    className={styles.photo}\r\n                  />\r\n                ) : (\r\n                  <img\r\n                    src={`https://image.tmdb.org/t/p/w200${profile_path}`}\r\n                    alt={`${name}`}\r\n                    className={styles.photo}\r\n                  />\r\n                )}\r\n                <h4 className={styles.name}>Aktor: {name}</h4>\r\n                <p className={styles.character}>Rola: {character}</p>\r\n              </li>\r\n            ))\r\n          )\r\n        }\r\n        </ul>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Cast\r\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"ErrorView_wrapper__2QkYq\",\"img\":\"ErrorView_img__w4F5u\",\"text\":\"ErrorView_text__6IWo-\"};","\r\nimport errorImage from '../../images/error.svg.png';\r\nimport styles from './ErrorView.module.css';\r\n\r\nfunction ErrorView({ message }) {\r\n  return (\r\n    <div role=\"alert\" className={styles.wrapper}>\r\n      <p text={message} className={styles.text}>\r\n        {message}\r\n      </p>\r\n      <img src={errorImage} width=\"650\" alt=\"sadcat\" className={styles.img} />\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\n\r\nexport default ErrorView;","import { BASE_URL } from \"./constans\";\r\nimport { API_KEY } from \"./constans\";\r\nimport { LANGUAGE } from \"./constans\";\r\n\r\nasync function apiService(url = \"\", config = {}) {\r\n  const response = await fetch(url, config);\r\n  return response.ok\r\n    ? await response.json()\r\n    : Promise.reject(\r\n        new Error(\"Informacja, której szukasz, nie została znaleziona.\")\r\n      );\r\n}\r\n\r\nfunction getTrending(page) {\r\n  return apiService(\r\n    `${BASE_URL}/trending/movie/day?api_key=${API_KEY}&language=${LANGUAGE}&page=${page}`\r\n  );\r\n}\r\n\r\nfunction searchMovies(query, page) {\r\n  return apiService(\r\n    `${BASE_URL}/search/movie?api_key=${API_KEY}&language=${LANGUAGE}&query=${query}&page=${page}`\r\n  );\r\n}\r\n\r\nfunction getMovieDetails(movieId, setMovie) {\r\n  return apiService(\r\n    `${BASE_URL}/movie/${movieId}?api_key=${API_KEY}&language=${LANGUAGE}`\r\n  );\r\n}\r\n\r\nfunction getMovieCast(movieId, setCast) {\r\n  return apiService(\r\n    `${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}&language=${LANGUAGE}`\r\n  );\r\n}\r\n\r\nfunction getMovieReviews(movieId, setReviews) {\r\n  return apiService(\r\n    `${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US`\r\n  );\r\n}\r\n\r\nexport {\r\n  getTrending,\r\n  searchMovies,\r\n  getMovieDetails,\r\n  getMovieCast,\r\n  getMovieReviews,\r\n};\r\n","const BASE_URL = 'https://api.themoviedb.org/3';\r\nconst API_KEY = '75815181ea441a6e2021750ae525d2f4';\r\nconst LANGUAGE = 'pl-PL';\r\n\r\nconst STATUS = {\r\n  IDLE: 'idle',\r\n  PENDING: 'pending',\r\n  RESOLVED: 'resolved',\r\n  REJECTED: 'rejected',\r\n};\r\n\r\nexport { BASE_URL, API_KEY, STATUS, LANGUAGE };"],"names":["id","useParams","useState","error","setError","STATUS","status","setStatus","authors","setAuthors","useEffect","getMovieCast","then","cast","catch","console","log","LoaderComponent","message","className","styles","length","map","character","name","profile_path","src","actorPlaceholder","alt","role","text","errorImage","width","apiService","url","config","fetch","response","ok","json","Promise","reject","Error","getTrending","page","BASE_URL","API_KEY","LANGUAGE","searchMovies","query","getMovieDetails","movieId","setMovie","setCast","getMovieReviews","setReviews","IDLE","PENDING","RESOLVED","REJECTED"],"sourceRoot":""}