{"version":3,"file":"static/js/600.a0ec8d0e.chunk.js","mappings":"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","sources":["webpack://filmweb/./src/components/ErrorComponent/ErrorView.module.css?39a8","components/ErrorComponent/ErrorView..jsx","webpack://filmweb/./src/components/SearchBar/SearchBar.module.css?35a0","components/SearchBar/SearchBar.jsx","webpack://filmweb/./src/pages/MoviesPage/MoviesPage.module.css?7ea7","pages/MoviesPage/MoviesPage.jsx","utils/apiCalls.js","utils/constans.js","utils/paginationStyles.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"ErrorView_wrapper__2QkYq\",\"img\":\"ErrorView_img__w4F5u\",\"text\":\"ErrorView_text__6IWo-\"};","\r\nimport errorImage from '../../images/error.svg.png';\r\nimport styles from './ErrorView.module.css';\r\n\r\nfunction ErrorView({ message }) {\r\n  return (\r\n    <div role=\"alert\" className={styles.wrapper}>\r\n      <p text={message} className={styles.text}>\r\n        {message}\r\n      </p>\r\n      <img src={errorImage} width=\"650\" alt=\"sadcat\" className={styles.img} />\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\n\r\nexport default ErrorView;","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"SearchBar_form__lr4GN\",\"input\":\"SearchBar_input__dzwHq\",\"label\":\"SearchBar_label__bAu6f\",\"btn\":\"SearchBar_btn__g-N1E\"};","import React from 'react';\r\nimport { useState } from \"react\";\r\n// import { toast } from \"react-toastify\";\r\nimport styles from './SearchBar.module.css';\r\n\r\n\r\nconst SearchBar = ({ onHandleSubmit }) => {\r\n  const [query, setQuery] = useState('');\r\n  const onSubmit = (event) => {\r\n    event.preventDefault();\r\n    if (query.trim() === '') {\r\n      alert('Wprowadź tytuł filmu');\r\n    }\r\n    onHandleSubmit(query.trim());\r\n    setQuery('');\r\n  };\r\n\r\n  return (\r\n    <form className={styles.form} onSubmit={onSubmit}>\r\n      <input\r\n        className={styles.input}\r\n        type=\"text\"\r\n        value={query}\r\n        autoComplete='off'\r\n        autoFocus\r\n        placeholder='Wyszukaj filmu...'\r\n        onChange={( {target }) => setQuery(target.value)}\r\n      />\r\n      <button type='submit' className={styles.btn}>\r\n        <span className={styles.label}>Szukaj</span>\r\n      </button>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default SearchBar;\r\n\r\n","// extracted by mini-css-extract-plugin\nexport default {\"main\":\"MoviesPage_main__Tm5ni\",\"moviesList\":\"MoviesPage_moviesList__Wz1E4\",\"moviesItem\":\"MoviesPage_moviesItem__2axjP\",\"poster\":\"MoviesPage_poster__O22M6\",\"movieTitle\":\"MoviesPage_movieTitle__W3lNw\"};","import React, { useEffect, useState } from 'react';\r\nimport { Link, useLocation, useNavigate } from 'react-router-dom';\r\nimport { Pagination } from '@material-ui/lab';\r\nimport useStyles from \"../../utils/paginationStyles\";\r\nimport { searchMovies } from '../../utils/apiCalls';\r\nimport { STATUS } from \"../../utils/constans\";\r\nimport LoaderComponent from \"../../components/LoaderComponent/LoaderComponent\";\r\nimport ErrorView from \"../../components/ErrorComponent/ErrorView.\";\r\nimport SearchBar from '../../components/SearchBar/SearchBar';\r\nimport moviePlaceholder from \"../../images/moviePlaceholder.jpg\";\r\nimport styles from './MoviesPage.module.css';\r\n\r\n\r\nconst MoviesPage = () => {\r\n\r\n  const classes = useStyles();\r\n  const navigate = useNavigate();\r\n  const location = useLocation();\r\n  const [query, setQuery] = useState('');\r\n  const [totalPages, setTotalPages] = useState(0);\r\n  const [movies, setMovies] = useState(null);\r\n  const [error, setError] = useState(null);\r\n  const [status, setStatus] = useState(STATUS.IDLE);\r\n\r\n  const page = new URLSearchParams(location.search).get(\"page\") ?? 1;\r\n\r\n  useEffect(() => {\r\n    if (location.search === '') {\r\n      return;\r\n    }\r\n    const newSearch = new URLSearchParams(location.search).get('query');\r\n    setQuery(newSearch, page);\r\n  }, [location.search, page]);\r\n\r\n  useEffect(() => {\r\n    if (!query) return;\r\n    setStatus(STATUS.PENDING);\r\n    searchMovies(query, page)\r\n    .then(({ results, total_pages }) => {\r\n      if (results.length === 0) {\r\n        setError(`Brak wyników dla ${query}!`);\r\n        setStatus(STATUS.REJECTED);\r\n        return;\r\n      }\r\n      setMovies(results);\r\n      setTotalPages(total_pages);\r\n      setStatus(STATUS.RESOLVED);\r\n    })\r\n    .catch((error) => {\r\n      console.log(error);\r\n      setError(\"Coś poszło nie tak. Spróbuj ponownie.\");\r\n      setStatus(STATUS.REJECTED);\r\n    });\r\n  }, [query, page]);\r\n\r\n  const searchTitle = (newSearch) => {\r\n    if (query === newSearch) return;\r\n    setQuery(newSearch);\r\n    setMovies(null);\r\n    setError(null);\r\n    setStatus(STATUS.IDLE);\r\n    navigate({ ...location, search: `query=${newSearch}&page=1` });\r\n  };\r\n\r\n  const onHandlePage = (event, page) => {\r\n    navigate({ ...location, search: `query=${query}&page=${page}` });\r\n  }\r\n\r\n\r\n  return (\r\n    <main className={styles.main}>\r\n      <SearchBar onHandleSubmit={searchTitle} />\r\n\r\n      {status === STATUS.PENDING && <LoaderComponent />}\r\n      {status === STATUS.REJECTED && <ErrorView message={error} />}\r\n      {status === STATUS.RESOLVED && (\r\n        <>\r\n          <ul className={styles.moviesList}>\r\n            {movies.map((movie) => (\r\n              <li key={movie.id} className={styles.moviesItem}>\r\n                <Link to={`/movies/${movie.id}`}>\r\n                  <img\r\n                    src={\r\n                      movie.poster_path\r\n                        ? `https://image.tmdb.org/t/p/w500/${movie.poster_path}` || moviePlaceholder\r\n                        : moviePlaceholder\r\n                    }\r\n                    alt={movie.title || movie.name}\r\n                    className={styles.poster}\r\n                  />\r\n                </Link>\r\n                {movie.title ? (\r\n                  <span className={styles.movieTitle}>{movie.title}</span>\r\n                ) : (\r\n                  <span className={styles.movieTitle}>{movie.name}</span>\r\n                )}\r\n                <p className={styles.vote}>{movie.vote_average}</p>\r\n              </li>\r\n            ))}\r\n          </ul>\r\n          {totalPages > 1 && (\r\n            <Pagination\r\n              className={classes.root}\r\n              count={totalPages}\r\n              onChange={onHandlePage}\r\n              page={Number(page)}\r\n              showFirstButton\r\n              showLastButton\r\n              size=\"large\"\r\n            />\r\n          )}\r\n        </>\r\n      )}\r\n\r\n\r\n    </main>\r\n  )\r\n}\r\n\r\nexport default MoviesPage;\r\n","import { BASE_URL } from \"./constans\";\r\nimport { API_KEY } from \"./constans\";\r\nimport { LANGUAGE } from \"./constans\";\r\n\r\nasync function apiService(url = \"\", config = {}) {\r\n  const response = await fetch(url, config);\r\n  return response.ok\r\n    ? await response.json()\r\n    : Promise.reject(\r\n        new Error(\"Informacja, której szukasz, nie została znaleziona.\")\r\n      );\r\n}\r\n\r\nfunction getTrending(page) {\r\n  return apiService(\r\n    `${BASE_URL}/trending/movie/day?api_key=${API_KEY}&language=${LANGUAGE}&page=${page}`\r\n  );\r\n}\r\n\r\nfunction searchMovies(query, page) {\r\n  return apiService(\r\n    `${BASE_URL}/search/movie?api_key=${API_KEY}&language=${LANGUAGE}&query=${query}&page=${page}`\r\n  );\r\n}\r\n\r\nfunction getMovieDetails(movieId, setMovie) {\r\n  return apiService(\r\n    `${BASE_URL}/movie/${movieId}?api_key=${API_KEY}&language=${LANGUAGE}`\r\n  );\r\n}\r\n\r\nfunction getMovieCast(movieId, setCast) {\r\n  return apiService(\r\n    `${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}&language=${LANGUAGE}`\r\n  );\r\n}\r\n\r\nfunction getMovieReviews(movieId, setReviews) {\r\n  return apiService(\r\n    `${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US`\r\n  );\r\n}\r\n\r\nexport {\r\n  getTrending,\r\n  searchMovies,\r\n  getMovieDetails,\r\n  getMovieCast,\r\n  getMovieReviews,\r\n};\r\n","const BASE_URL = 'https://api.themoviedb.org/3';\r\nconst API_KEY = '75815181ea441a6e2021750ae525d2f4';\r\nconst LANGUAGE = 'pl-PL';\r\n\r\nconst STATUS = {\r\n  IDLE: 'idle',\r\n  PENDING: 'pending',\r\n  RESOLVED: 'resolved',\r\n  REJECTED: 'rejected',\r\n};\r\n\r\nexport { BASE_URL, API_KEY, STATUS, LANGUAGE };","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    '& .MuiPaginationItem-page.Mui-selected, & .MuiPaginationItem-page.Mui-selected:hover, & .MuiPaginationItem-page.Mui-selected.Mui-focusVisible,  & .MuiPaginationItem-page:hover, & .MuiPaginationItem-page.Mui-focusVisible': {\r\n      backgroundColor: '#000000',\r\n      boxShadow: '0px 0px 20px 0px rgba(255, 255, 255, 1)',\r\n    },\r\n    '& .MuiPaginationItem-root': {\r\n      color: '#fff',\r\n    },\r\n    '& .MuiPaginationItem-page:hover, & .MuiPaginationItem-page.Mui-focusVisible': {\r\n      opacity: '0.7',\r\n    },\r\n    '& .MuiPaginationItem-page.Mui-selected:hover, & .MuiPaginationItem-page.Mui-selected.Mui-focusVisible': {\r\n      opacity: '1',\r\n    },\r\n    '& .MuiPagination-ul': {\r\n      justifyContent: 'center',\r\n    },\r\n  },\r\n});\r\n\r\nexport default useStyles;\r\n"],"names":["message","role","className","styles","text","src","errorImage","width","alt","onHandleSubmit","useState","query","setQuery","onSubmit","event","preventDefault","trim","alert","type","value","autoComplete","autoFocus","placeholder","onChange","target","classes","useStyles","navigate","useNavigate","location","useLocation","totalPages","setTotalPages","movies","setMovies","error","setError","STATUS","status","setStatus","page","URLSearchParams","search","get","useEffect","newSearch","searchMovies","then","results","total_pages","length","catch","console","log","LoaderComponent","map","movie","to","id","poster_path","moviePlaceholder","title","name","vote_average","Pagination","root","count","Number","showFirstButton","showLastButton","size","apiService","url","config","fetch","response","ok","json","Promise","reject","Error","getTrending","BASE_URL","API_KEY","LANGUAGE","getMovieDetails","movieId","setMovie","getMovieCast","setCast","getMovieReviews","setReviews","IDLE","PENDING","RESOLVED","REJECTED","makeStyles","display","justifyContent","backgroundColor","boxShadow","color","opacity"],"sourceRoot":""}